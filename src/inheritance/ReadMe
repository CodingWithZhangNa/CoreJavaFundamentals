
1.方法覆盖重写的注意事项：

a.必须保证父子类之间方法的名称相同，参数列表也相同。
@Override:写在方法前面，用来检测是不是有效的正确覆盖重写。
这个注解就算不写，只要满足要求，也是正确的方法覆盖重写。

b.子类方法的返回值必须【小于等于】父类方法的返回值范围。
小扩展提示：Object类是所有类的公共最高父类（祖宗类），String就是Object的子类。

c.子类方法的权限必须【大于等于】父类方法的权限修饰符。
小扩展提示：public > protected > （default） > private
备注：（default）不是关键字default，而是什么都不写，留空。

2.继承中方法的覆盖重写应用场景：
设计原则：对于已经投入使用的类，尽量不要进行修改。推荐定义一个新的类，来重复利用其中共性内容，并且添加改动新内容。

3.继承关系中，父子类构造方法的访问特点：
子类必须调用父类构造方法，不写则赠送super();
写了则用写的指定的super调用，super只能有一个，还必须是第一个。

4.super关键字的用法有三种：
a.在子类的成员方法中，访问父类的成员变量。
b.在子类的成员方法中，访问父类的成员方法。
c.在子类的构造方法中，访问父类的构造方法。

5.super关键字用来访问父类内容，而this关键字用来访问本类内容。用法也有三种：
a.在本类的成员方法中，访问本类的成员变量。
b.在本类的成员方法中，访问本类的另一个成员方法。
c.在本类的构造方法中，访问本类的另一个构造方法。
在第三种用法当中要注意：
A.this(...)调用也必须是构造方法的第一个语句，唯一一个。
B.super和this两种构造调用，不能同时使用。

6.Java继承的三个特点：
a.Java语言是【单继承】的：一个类的直接父类只能有唯一一个。
b.Java语言可以【多级继承】。
c.一个子类的直接父类是唯一的，但是一个父类可以拥有很多个子类。

7.


